name: Continuous Integration and Deployment

on:
  push:
    branches:
      - master

permissions:
  contents: read
  id-token: write

jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Install NodeJS
        uses: actions/setup-node@v3
        with:
          node-version: "20"
          cache: "pnpm"

      - name: Install NodeJS dependencies
        run: pnpm install

      - name: Run linting
        run: pnpm lint:ci

      - name: Run type check
        run: pnpm types:check

  publish-storybook:
    needs: lint-and-test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Install NodeJS
        uses: actions/setup-node@v3
        with:
          node-version: "20"
          cache: "pnpm"

      - name: Install NodeJS dependencies
        run: pnpm install

      - name: Build Storybook
        env:
          NODE_OPTIONS: "--max_old_space_size=16384"
        run: pnpm run build-storybook

      - name: Create CNAME record file
        run: echo "yail.programmer-network" > ./storybook-static/CNAME

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: "./storybook-static"

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1

  publish-npm:
    needs: [lint-and-test, publish-storybook]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Install NodeJS
        uses: actions/setup-node@v3
        with:
          node-version: "20"
          cache: "pnpm"

      - name: Install NodeJS dependencies
        run: pnpm install

      - name: Build the code
        run: pnpm build

      - name: Auto increment version (optional)
        run: npm version patch -m "Upgrade to %s for reasons"

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Publish to npm
        run: pnpm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
